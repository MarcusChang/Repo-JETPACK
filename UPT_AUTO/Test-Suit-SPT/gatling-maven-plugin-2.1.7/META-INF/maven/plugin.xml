<?xml version="1.0" encoding="UTF-8"?>

<!-- Generated by maven-plugin-tools 3.3 on 2015-07-16 -->

<plugin>
  <name>gatling-maven-plugin</name>
  <description>gatling-maven-plugin</description>
  <groupId>io.gatling</groupId>
  <artifactId>gatling-maven-plugin</artifactId>
  <version>2.1.7</version>
  <goalPrefix>gatling</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>execute</goal>
      <description>Mojo to execute Gatling.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>integration-test</phase>
      <implementation>io.gatling.mojo.GatlingMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>artifacts</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>bodiesFolder</name>
          <alias>bdf</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder as the folder where request bodies are stored.</description>
        </parameter>
        <parameter>
          <name>compiledClassesFolder</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description>Folder where the compiled classes are written.</description>
        </parameter>
        <parameter>
          <name>configFolder</name>
          <alias>cd</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder as the configuration directory.</description>
        </parameter>
        <parameter>
          <name>dataFolder</name>
          <alias>df</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder as the folder where feeders are stored.</description>
        </parameter>
        <parameter>
          <name>disableCompiler</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Disable the Scala compiler, if scala-maven-plugin is already in charge
of compiling the simulations.</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of list of exclude patterns to use for scanning. By default empty.</description>
        </parameter>
        <parameter>
          <name>failOnError</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Will cause the project build to look successful, rather than fail, even
if there are Gatling test failures. This can be useful on a continuous
integration server, if your only option to be able to collect output
files, is if the project builds successfully.</description>
        </parameter>
        <parameter>
          <name>includes</name>
          <type>java.lang.String[]</type>
          <required>false</required>
          <editable>true</editable>
          <description>List of list of include patterns to use for scanning. Includes all simulations by default.</description>
        </parameter>
        <parameter>
          <name>jvmArgs</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Extra JVM arguments to pass when running Gatling.</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven Project.</description>
        </parameter>
        <parameter>
          <name>noReports</name>
          <alias>nr</alias>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Run simulation but does not generate reports. By default false.</description>
        </parameter>
        <parameter>
          <name>outputDirectoryBaseName</name>
          <alias>on</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Force the name of the directory generated for the results of the run.</description>
        </parameter>
        <parameter>
          <name>overrideGatlingJvmArgs</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override Gatling&apos;s default JVM args, instead of replacing them.</description>
        </parameter>
        <parameter>
          <name>overrideZincJvmArgs</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Override Zinc&apos;s default JVM args, instead of replacing them.</description>
        </parameter>
        <parameter>
          <name>propagateSystemProperties</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Propagate System properties to forked processes.</description>
        </parameter>
        <parameter>
          <name>reportsDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>reportsOnly</name>
          <alias>ro</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Generate the reports for the simulation in this folder.</description>
        </parameter>
        <parameter>
          <name>resultsFolder</name>
          <alias>rf</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder as the folder where results are stored.</description>
        </parameter>
        <parameter>
          <name>runMultipleSimulations</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Iterate over multiple simulations if more than one simulation file is found. By default false.
If multiple simulations are found but {@literal runMultipleSimulations} is false the execution will fail.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven Session Object.</description>
        </parameter>
        <parameter>
          <name>simulationClass</name>
          <alias>sc</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>A name of a Simulation class to run.</description>
        </parameter>
        <parameter>
          <name>simulationsFolder</name>
          <alias>sf</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder to discover simulations that could be run.</description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Disable the plugin.</description>
        </parameter>
        <parameter>
          <name>zincJvmArgs</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Extra JVM arguments to pass when running Zinc.</description>
        </parameter>
      </parameters>
      <configuration>
        <artifacts implementation="java.util.List" default-value="${plugin.artifacts}"/>
        <bodiesFolder implementation="java.io.File" default-value="${basedir}/src/test/resources/bodies">${gatling.bodiesFolder}</bodiesFolder>
        <compiledClassesFolder implementation="java.io.File" default-value="${project.build.testOutputDirectory}"/>
        <configFolder implementation="java.io.File" default-value="${basedir}/src/test/resources">${gatling.configFolder}</configFolder>
        <dataFolder implementation="java.io.File" default-value="${basedir}/src/test/resources/data">${gatling.dataFolder}</dataFolder>
        <disableCompiler implementation="boolean" default-value="false">${gatling.disableCompiler}</disableCompiler>
        <failOnError implementation="boolean" default-value="true">${gatling.failOnError}</failOnError>
        <jvmArgs implementation="java.util.List">${gatling.jvmArgs}</jvmArgs>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <noReports implementation="boolean" default-value="false">${gatling.noReports}</noReports>
        <outputDirectoryBaseName implementation="java.lang.String">${gatling.outputName}</outputDirectoryBaseName>
        <overrideGatlingJvmArgs implementation="boolean" default-value="false"/>
        <overrideZincJvmArgs implementation="boolean" default-value="false"/>
        <propagateSystemProperties implementation="boolean" default-value="true">${gatling.propagateSystemProperties}</propagateSystemProperties>
        <reportsDirectory implementation="java.io.File" default-value="${basedir}/target/gatling"/>
        <reportsOnly implementation="java.lang.String">${gatling.reportsOnly}</reportsOnly>
        <resultsFolder implementation="java.io.File" default-value="${basedir}/target/gatling/results">${gatling.resultsFolder}</resultsFolder>
        <runMultipleSimulations implementation="boolean" default-value="false"/>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
        <simulationClass implementation="java.lang.String">${gatling.simulationClass}</simulationClass>
        <simulationsFolder implementation="java.io.File" default-value="${basedir}/src/test/scala">${gatling.simulationsFolder}</simulationsFolder>
        <skip implementation="boolean" default-value="false">${gatling.skip}</skip>
        <zincJvmArgs implementation="java.util.List">${gatling.zincJvmArgs}</zincJvmArgs>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.repository.RepositorySystem</role>
          <field-name>repository</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
    <mojo>
      <goal>help</goal>
      <description>Display help information on gatling-maven-plugin.&lt;br&gt;
Call &lt;code&gt;mvn gatling:help -Ddetail=true -Dgoal=&amp;lt;goal-name&amp;gt;&lt;/code&gt; to display parameter details.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>false</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>io.gatling.mojo.HelpMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>true</threadSafe>
      <parameters>
        <parameter>
          <name>detail</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;code&gt;true&lt;/code&gt;, display all settable properties for each goal.</description>
        </parameter>
        <parameter>
          <name>goal</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the goal for which to show help. If unspecified, all goals will be displayed.</description>
        </parameter>
        <parameter>
          <name>indentSize</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The number of spaces per indentation level, should be positive.</description>
        </parameter>
        <parameter>
          <name>lineLength</name>
          <type>int</type>
          <required>false</required>
          <editable>true</editable>
          <description>The maximum length of a display line, should be positive.</description>
        </parameter>
      </parameters>
      <configuration>
        <detail implementation="boolean" default-value="false">${detail}</detail>
        <goal implementation="java.lang.String">${goal}</goal>
        <indentSize implementation="int" default-value="2">${indentSize}</indentSize>
        <lineLength implementation="int" default-value="80">${lineLength}</lineLength>
      </configuration>
    </mojo>
    <mojo>
      <goal>recorder</goal>
      <description>Mojo to run Gatling Recorder.</description>
      <requiresDependencyResolution>test</requiresDependencyResolution>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>integration-test</phase>
      <implementation>io.gatling.mojo.RecorderMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <threadSafe>false</threadSafe>
      <parameters>
        <parameter>
          <name>bodiesFolder</name>
          <alias>bdf</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder as the folder where request bodies are stored.</description>
        </parameter>
        <parameter>
          <name>className</name>
          <alias>cn</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The name of the generated class.</description>
        </parameter>
        <parameter>
          <name>compiledClassesFolder</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>false</editable>
          <description>Folder where the compiled classes are written.</description>
        </parameter>
        <parameter>
          <name>configFolder</name>
          <alias>cd</alias>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description>Use this folder as the configuration directory.</description>
        </parameter>
        <parameter>
          <name>encoding</name>
          <alias>enc</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The encoding used in the recorder.</description>
        </parameter>
        <parameter>
          <name>followRedirect</name>
          <alias>fr</alias>
          <type>java.lang.Boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>The value of the &quot;Follow Redirects&quot; option.</description>
        </parameter>
        <parameter>
          <name>localPort</name>
          <alias>lp</alias>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Local port used by Gatling Proxy for HTTP.</description>
        </parameter>
        <parameter>
          <name>mavenProject</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven Project.</description>
        </parameter>
        <parameter>
          <name>outputFolder</name>
          <alias>of</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Uses as the folder where generated simulations will be stored.</description>
        </parameter>
        <parameter>
          <name>packageName</name>
          <alias>pkg</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>The package of the generated class.</description>
        </parameter>
        <parameter>
          <name>proxyHost</name>
          <alias>ph</alias>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Outgoing proxy host.</description>
        </parameter>
        <parameter>
          <name>proxyPort</name>
          <alias>pp</alias>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Outgoing proxy port for HTTP.</description>
        </parameter>
        <parameter>
          <name>proxySSLPort</name>
          <alias>pps</alias>
          <type>java.lang.Integer</type>
          <required>false</required>
          <editable>true</editable>
          <description>Outgoing proxy port for HTTPS.</description>
        </parameter>
        <parameter>
          <name>session</name>
          <type>org.apache.maven.execution.MavenSession</type>
          <required>false</required>
          <editable>false</editable>
          <description>The Maven Session Object.</description>
        </parameter>
      </parameters>
      <configuration>
        <bodiesFolder implementation="java.io.File" default-value="${basedir}/src/test/resources/bodies">${gatling.bodiesFolder}</bodiesFolder>
        <className implementation="java.lang.String">${gatling.recorder.className}</className>
        <compiledClassesFolder implementation="java.io.File" default-value="${project.build.testOutputDirectory}"/>
        <configFolder implementation="java.io.File" default-value="${basedir}/src/test/resources">${gatling.configFolder}</configFolder>
        <encoding implementation="java.lang.String">${gatling.recorder.encoding}</encoding>
        <followRedirect implementation="java.lang.Boolean">${gatling.recorder.followRedirect}</followRedirect>
        <localPort implementation="java.lang.Integer">${gatling.recorder.localPort}</localPort>
        <mavenProject implementation="org.apache.maven.project.MavenProject" default-value="${project}"/>
        <outputFolder implementation="java.lang.String" default-value="${basedir}/src/test/scala">${gatling.recorder.outputFolder}</outputFolder>
        <packageName implementation="java.lang.String" default-value="${project.groupId}">${gatling.recorder.package}</packageName>
        <proxyHost implementation="java.lang.String">${gatling.recorder.proxyHost}</proxyHost>
        <proxyPort implementation="java.lang.Integer">${gatling.recorder.proxyPort}</proxyPort>
        <proxySSLPort implementation="java.lang.Integer">${gatling.recorder.proxySslPort}</proxySSLPort>
        <session implementation="org.apache.maven.execution.MavenSession" default-value="${session}"/>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.repository.RepositorySystem</role>
          <field-name>repository</field-name>
        </requirement>
        <requirement>
          <role>org.apache.maven.toolchain.ToolchainManager</role>
          <field-name>toolchainManager</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>io.gatling</groupId>
      <artifactId>gatling-compiler</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <type>jar</type>
      <version>2.10.4</version>
    </dependency>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-reflect</artifactId>
      <type>jar</type>
      <version>2.10.4</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe</groupId>
      <artifactId>config</artifactId>
      <type>jar</type>
      <version>1.2.1</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <type>jar</type>
      <version>1.7.12</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <type>jar</type>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <type>jar</type>
      <version>1.1.3</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.zinc</groupId>
      <artifactId>zinc</artifactId>
      <type>jar</type>
      <version>0.3.5.3</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.sbt</groupId>
      <artifactId>incremental-compiler</artifactId>
      <type>jar</type>
      <version>0.13.5</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.sbt</groupId>
      <artifactId>sbt-interface</artifactId>
      <type>jar</type>
      <version>0.13.5</version>
    </dependency>
    <dependency>
      <groupId>com.typesafe.sbt</groupId>
      <artifactId>compiler-interface</artifactId>
      <type>jar</type>
      <version>0.13.5</version>
    </dependency>
    <dependency>
      <groupId>com.github.scopt</groupId>
      <artifactId>scopt_2.10</artifactId>
      <type>jar</type>
      <version>3.3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-exec</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-plexus</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-classworlds</artifactId>
      <type>jar</type>
      <version>2.2.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-inject-bean</artifactId>
      <type>jar</type>
      <version>1.4.2</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.sisu</groupId>
      <artifactId>sisu-guice</artifactId>
      <type>jar</type>
      <version>2.1.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-compat</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings-builder</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-aether-provider</artifactId>
      <type>jar</type>
      <version>3.0</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-impl</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-spi</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-api</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.aether</groupId>
      <artifactId>aether-util</artifactId>
      <type>jar</type>
      <version>1.7</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-sec-dispatcher</artifactId>
      <type>jar</type>
      <version>1.3</version>
    </dependency>
    <dependency>
      <groupId>org.sonatype.plexus</groupId>
      <artifactId>plexus-cipher</artifactId>
      <type>jar</type>
      <version>1.4</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interpolation</artifactId>
      <type>jar</type>
      <version>1.14</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-component-annotations</artifactId>
      <type>jar</type>
      <version>1.5.5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-beta-6</version>
    </dependency>
  </dependencies>
</plugin>